<?php
class Beer extends DataObject {
    static $singular_name = "Beer";
    static $plural_name = "Beers";

    private static $db = array(
        'Name'=>'Varchar(255)',
        'Description'=>'HTMLText',
        'Style'=>'Varchar(255)',
        'HopsUsed'=>'Varchar(255)',
        'Colour'=>'Varchar(255)',
        'Scent'=>'Varchar(255)',
        'Flavour'=>'Varchar(255)',
        'AlcoholVolume'=>'Varchar(255)',
        'IBU'=>'Varchar(255)',
        'OneStarRating' => "Int",
        'TwoStarRating' => "Int",
        'ThreeStarRating' => "Int",
        'FourStarRating' => "Int",
        'FiveStarRating' => "Int",
        'AverageStarRating' => "Double",
        'CountStarRating' => "Int"
    );


    private static $has_one = array(
        'BeerImage'=>'Image',
        'BreweryPage'=>'BreweryPage'
    );

    private static $default_sort = array(
        'Name ASC'
    );

    private static $summary_fields = array(
        'Name',
        'Colour',
        'Scent',
        'Flavour',
        'AlcoholVolume',
        'IBU'
    );

    public function getCMSFields()
    {
        $fields = parent::getCMSFields();

        $BeerImage = new UploadField('BeerImage', '<p class="message warning">Minimum width 400px where possible</p>');
        $BeerImage->setFolderName('theme-images/beer-images');
        $BeerImage->setAllowedMaxFileNumber(1);
        $fields->addFieldsToTab("Root.Main", $BeerImage);
        $fields->addFieldsToTab("Root.Main", ReadonlyField::create('OneStarRating', 'One Star Rating', $this->OneStarRating));
        $fields->addFieldsToTab("Root.Main", ReadonlyField::create('TwoStarRating', 'Two Star Rating', $this->TwoStarRating));
        $fields->addFieldsToTab("Root.Main", ReadonlyField::create('ThreeStarRating', 'Three Star Rating', $this->ThreeStarRating));
        $fields->addFieldsToTab("Root.Main", ReadonlyField::create('FourStarRating', 'Four Star Rating', $this->FourStarRating));
        $fields->addFieldsToTab("Root.Main", ReadonlyField::create('FiveStarRating', 'Five Star Rating', $this->FiveStarRating));

        return $fields;
    }

    function canEdit($member = NULL)
    {
        return true;
    }
    function canDelete($member = NULL)
    {
        return true;
    }
    function canCreate($member = NULL)
    {
        return true;
    }
    function canView($member = NULL)
    {
        return true;
    }

    function getAverageStarRatingRounded(){
        return number_format($this->AverageStarRating, 1);
    }

    function onBeforeWrite()
    {
        parent::onBeforeWrite(); // TODO: Change the autogenerated stub
        $TotalScore = $this->OneStarRating+($this->TwoStarRating*2)+($this->ThreeStarRating*3)+($this->FourStarRating*4)+($this->FiveStarRating*5);
        $CountOfRatings = $this->OneStarRating+$this->TwoStarRating+$this->ThreeStarRating+$this->FourStarRating+$this->FiveStarRating;
        $this->AverageStarRating = $TotalScore/$CountOfRatings;
        $this->CountStarRating = $CountOfRatings;
    }


}